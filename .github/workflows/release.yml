
name: Release Binary

on:
  push:
    tags:
      - 'v*.*.*'

env:
  REPO_NAME: ${{ github.event.repository.name }}

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - os: linux
            arch: x86_64
            target: x86_64-unknown-linux-gnu
            ext: ""
          - os: linux
            arch: aarch64
            target: aarch64-unknown-linux-gnu
            ext: ""
          - os: windows
            arch: x86_64
            target: x86_64-pc-windows-msvc
            ext: ".exe"
          - os: windows
            arch: aarch64
            target: aarch64-pc-windows-msvc
            ext: ".exe"
          - os: macos
            arch: x86_64
            target: x86_64-apple-darwin
            ext: ""
          - os: macos
            arch: aarch64
            target: aarch64-apple-darwin
            ext: ""
          - os: freebsd
            arch: x86_64
            target: x86_64-unknown-freebsd
            ext: ""
          - os: freebsd
            arch: aarch64
            target: aarch64-unknown-freebsd
            ext: ""
          - os: openbsd
            arch: x86_64
            target: x86_64-unknown-openbsd
            ext: ""
          - os: openbsd
            arch: aarch64
            target: aarch64-unknown-openbsd
            ext: ""
    steps:
      - uses: actions/checkout@v4
      - uses: actions-rust-lang/setup-rust-toolchain@2fcdc490d667999e01ddbbf0f2823181beef6b39
        with:
          toolchain: stable
          profile: minimal
          override: true
      - name: Cache cross binary
        uses: actions/cache@v4
        with:
          path: ~/.cargo/bin/cross
          key: cross-${{ runner.os }}
      - name: Install cross
        run: cargo install cross --git https://github.com/cross-rs/cross
      - name: Cache cargo registry
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-
      - name: Build release binary
        run: cross +stable build --release --target ${{ matrix.target }}
      - name: Prepare artifact
        run: |
          mkdir -p artifacts/${{ matrix.os }}-${{ matrix.arch }}
          cp target/${{ matrix.target }}/release/${{ env.REPO_NAME }}${{ matrix.ext }} \
            artifacts/${{ matrix.os }}-${{ matrix.arch }}/${{ env.REPO_NAME }}-${{ matrix.os }}-${{ matrix.arch }}${{ matrix.ext }}
          sha256sum artifacts/${{ matrix.os }}-${{ matrix.arch }}/${{ env.REPO_NAME }}-${{ matrix.os }}-${{ matrix.arch }}${{ matrix.ext }} > \
            artifacts/${{ matrix.os }}-${{ matrix.arch }}/${{ env.REPO_NAME }}-${{ matrix.os }}-${{ matrix.arch }}${{ matrix.ext }}.sha256
      - name: Upload release artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.REPO_NAME }}-${{ matrix.os }}-${{ matrix.arch }}
          path: artifacts/${{ matrix.os }}-${{ matrix.arch }}

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: softprops/action-gh-release@v1
        with:
          generate_release_notes: true
      - uses: actions/download-artifact@v4
        with:
          path: artifacts
      - run: |
          for dir in artifacts/${{ env.REPO_NAME }}-*; do
            for file in "$dir"/*; do
              gh release upload "${{ github.ref_name }}" "$file"
            done
          done
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

